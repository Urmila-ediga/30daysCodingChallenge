class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def rangeSumBST(self, root: TreeNode, low: int, high: int) -> int:
        if root is None:
            return 0
        
        # If current node's value is less than low, skip left subtree
        if root.val < low:
            return self.rangeSumBST(root.right, low, high)
        
        # If current node's value is greater than high, skip right subtree
        if root.val > high:
            return self.rangeSumBST(root.left, low, high)
        
        # Otherwise, current node is in range
        return (root.val 
                + self.rangeSumBST(root.left, low, high) 
                + self.rangeSumBST(root.right, low, high))
