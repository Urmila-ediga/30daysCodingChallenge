# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        s=[]
        temp=head
        if head==None:
            return None
        while temp!=None:
            s.append(temp.val)
            temp=temp.next
        h=ListNode(s.pop())
        n=h
        while s:
            n.next=ListNode(s.pop())
            n=n.next
        return h